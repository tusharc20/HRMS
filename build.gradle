plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	//id "com.google.protobuf" version "0.9.4"

}

group = 'com.springbatch'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
/*
protobuf {
	protoc {
		// Path to the installed protoc binary
		path = "/src/main/proto"
	}
}
*/
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
/*protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.21.4' // Choose the appropriate version
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.66.0' // If you're using gRPC
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
			}
		}
	}
}
*/

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'com.google.protobuf:protobuf-java:4.28.0'
	//implementation 'io.grpc:grpc-stub:1.66.0'
	//implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
	implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
	implementation 'mysql:mysql-connector-java:8.0.32'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

//apply plugin: 'com.google.protobuf'
